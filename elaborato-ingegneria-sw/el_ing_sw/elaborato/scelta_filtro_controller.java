package elaborato;

import javafx.fxml.FXML;
import javafx.fxml.FXMLLoader;
import javafx.fxml.Initializable;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import elaborato.ricerca.*;

import java.io.IOException;
import java.net.URL;
import java.util.ResourceBundle;

import javafx.event.ActionEvent;

import javafx.scene.control.ChoiceBox;
import javafx.stage.Modality;
import javafx.stage.Stage;

public class scelta_filtro_controller implements Initializable{
	@FXML
	private ChoiceBox<String> tipi_filtro;
	@FXML
	private Button visiona_finestra_filtro;

	// Event Listener on Button[#visiona_finestra_filtro].onAction
	@FXML
	public void visiona_finestra_filtro_oa(ActionEvent event) throws IOException {
		// TODO Autogenerated
		//in base a che filtro o scelto apro diverse finestre
		Parent root = null;
		Scene scene = null;
		Stage primaryStage = null;
		
		switch(tipi_filtro.getSelectionModel().getSelectedItem()) {
		case "automunito":
			root = FXMLLoader.load(getClass().getResource("automunito.fxml"));

			scene = new Scene(root);
			primaryStage = new Stage();
			primaryStage.setTitle("scegliere_filtro");
			primaryStage.setScene(scene);
			// specifico la modalita della nuova finestra
			primaryStage.initModality(Modality.WINDOW_MODAL);
			primaryStage.initOwner(visiona_finestra_filtro.getScene().getWindow()); // specifica il proprietario della nuova finestra;
																		// mi da problemi
			primaryStage.show();
			break;
		case "comune":
			root = FXMLLoader.load(getClass().getResource("comune.fxml"));

			scene = new Scene(root);
			primaryStage = new Stage();
			primaryStage.setTitle("scegliere_filtro");
			primaryStage.setScene(scene);
			// specifico la modalita della nuova finestra
			primaryStage.initModality(Modality.WINDOW_MODAL);
			primaryStage.initOwner(visiona_finestra_filtro.getScene().getWindow()); // specifica il proprietario della nuova finestra;
																		// mi da problemi
			primaryStage.show();
			break;
		case "disponibilita":
			 root = FXMLLoader.load(getClass().getResource("periodo.fxml"));

			scene = new Scene(root);
			primaryStage = new Stage();
			primaryStage.setTitle("scegliere_filtro");
			primaryStage.setScene(scene);
			// specifico la modalita della nuova finestra
			primaryStage.initModality(Modality.WINDOW_MODAL);
			primaryStage.initOwner(visiona_finestra_filtro.getScene().getWindow()); // specifica il proprietario della nuova finestra;
																		// mi da problemi
			primaryStage.show();
			break;
		case "lavoratore":
			 root = FXMLLoader.load(getClass().getResource("lavoratore.fxml"));

			scene = new Scene(root);
			primaryStage = new Stage();
			primaryStage.setTitle("scegliere_filtro");
			primaryStage.setScene(scene);
			// specifico la modalita della nuova finestra
			primaryStage.initModality(Modality.WINDOW_MODAL);
			primaryStage.initOwner(visiona_finestra_filtro.getScene().getWindow()); // specifica il proprietario della nuova finestra;
																		// mi da problemi
			primaryStage.show();
			break;
		case "lingua":
			root = FXMLLoader.load(getClass().getResource("lingua.fxml"));

			scene = new Scene(root);
			primaryStage = new Stage();
			primaryStage.setTitle("scegliere_filtro");
			primaryStage.setScene(scene);
			// specifico la modalita della nuova finestra
			primaryStage.initModality(Modality.WINDOW_MODAL);
			primaryStage.initOwner(visiona_finestra_filtro.getScene().getWindow()); // specifica il proprietario della nuova finestra;
																		// mi da problemi
			primaryStage.show();
			break;
		case "patente":
			root = FXMLLoader.load(getClass().getResource("patente.fxml"));

			scene = new Scene(root);
			primaryStage = new Stage();
			primaryStage.setTitle("scegliere_filtro");
			primaryStage.setScene(scene);
			// specifico la modalita della nuova finestra
			primaryStage.initModality(Modality.WINDOW_MODAL);
			primaryStage.initOwner(visiona_finestra_filtro.getScene().getWindow()); // specifica il proprietario della nuova finestra;
																		// mi da problemi
			primaryStage.show();
			break;
		}
		
	}

	@Override
	public void initialize(URL arg0, ResourceBundle arg1) {
		// TODO Auto-generated method stub
		tipi_filtro.getItems().addAll("automunito","comune","disponibilita","lavoratore","lingua","patente"); //dovrei inizializzarlo chiamando getNameFilter
	}
}
